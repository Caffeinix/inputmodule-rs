name: Firmware CI Checks
on:
  push

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  building:
    name: Building ${{ matrix.platform }}
    continue-on-error: ${{ matrix.experimental || false }}
    strategy:
      matrix:
        # All generated code should be running on stable now
        # TODO: Also test nightly
        #rust: [nightly, stable]
        rust: [stable]
        target: [debug, release]
        platform: [b1display, c1minimal, ledmatrix]
        #include:
        #  # Nightly is only for reference and allowed to fail
        #  - rust: nightly
        #    experimental: true
        #os:
        #  # Check compilation works on common OSes
        #  # (i.e. no path issues)
        #  # - macOS-latest
        #  - ubuntu-latest
        #  - windows-latest
    runs-on: [ubuntu-latest] #${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: thumbv6m-none-eabi
      - run: cargo install flip-link

      - run: |
            cargo build --${{ matrix.target }} -p ${{ matrix.platform }}

      - name: Convert to UF2 file
        run: |
            sudo apt-get update
            sudo apt-get install -y libudev-dev
            cargo install elf2uf2-rs
            elf2uf2-rs target/thumbv6m-none-eabi/${{ matrix.target }}/${{ matrix.platform }} ${{ matrix.platform }}.uf2

      - name: Show hash of firmare
        run: |
            sha256sum target/thumbv6m-none-eabi/${{ matrix.target }}/${{ matrix.platform }}
            sha256sum target/thumbv6m-none-eabi/${{ matrix.target }}/${{ matrix.platform }}.uf2

      - name: Upload Linux tool
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.platform}.uf2
          path: |
            ${{matrix.platform}.uf2

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          target: thumbv6m-none-eabi
      - run: |
          cargo clippy -p b1display -- --deny=warnings
          cargo clippy -p c1minimal -- --deny=warnings
          cargo clippy -p ledmatrix -- --deny=warnings

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
          target: thumbv6m-none-eabi
      - run: cargo fmt --all -- --check
