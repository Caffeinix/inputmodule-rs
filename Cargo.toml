[package]
edition = "2021"
name = "led_matrix_fw"
version = "0.1.1"

[dependencies]
cortex-m = { version = "0.7", features = ["critical-section-single-core"]}
cortex-m-rt = "0.7.3"
embedded-hal = { version = "0.2.7", features = ["unproven"] }

defmt = "0.3"
defmt-rtt = "0.4"

#panic-probe = { version = "0.3", features = ["print-defmt"] }
rp2040-panic-usb-boot = { git = "https://github.com/rwalkr/rp2040-panic-usb-boot" }

# Not using a BSP, we've got a LED Matrix BSP locally in this crate
rp2040-hal = { version="0.7", features=["rt"] }
rp2040-boot2 = "0.2"

# USB Serial
usb-device= "0.2.9"

heapless = "0.7.9"
usbd-serial = "0.1.1"
usbd-hid = "0.5.1"
is31fl3741 = { git = "https://github.com/JohnAZoidberg/is31fl3741", branch = "all-at-once" }
fugit = "0.3.6"

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
# To allow single-stepping through code use 0. Will cause timing issues, though
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
